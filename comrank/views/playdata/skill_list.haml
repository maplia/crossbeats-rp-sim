:javascript
  $(function() {
    set_adversary_linktext(true);
  });
= haml :navi, :locals => {:ancestry => [CxbRank::SITE_TOP_URI]}
%h1
  = page_title.gsub(/(\[\d+\-\d+\-\d+\])/, '<small>\1</small>')
- if skill_set.last_modified
  %p.last_modified 最終更新時刻: #{skill_set.last_modified.strftime('%Y-%m-%d %H:%M:%S')}
- if session[:user_id] and !edit
  - session_user = User.find_by_id(session[:user_id])
  - if mobile?
    %p.adversary_edit
      ユーザー名:
      = user.name
  - if session_user != user and CxbRank::SiteSettings.adversary_enabled?
    %p.adversary_edit
      - to_status = !CxbRank::Adversary.registered?(session_user, user)
      - link_text = (!to_status ? "#{CxbRank::ADVERSARY_LINKTEXTS_FULL[:remove][mobile?]}" : "#{CxbRank::ADVERSARY_LINKTEXTS_FULL[:register][mobile?]}")
      - adversary_id = user.user_id
      %a{:href => 'javascript:void(0)', :id => "adversary_edit_#{adversary_id}", :onClick => "edit_adversary_status('#{adversary_id}'); return false"}= link_text
- if defined? user and user.present?
  = haml :user, :locals => {:user => user, :edit => edit}
%div.unit
  %h2 ランクポイント
  %div.subunit
    = haml :points, :locals => {:skill_set => skill_set}
- CxbRank::SiteSettings.music_types.keys.sort.each do |type|
  - next if CxbRank::MUSIC_TYPE_ST_COUNTS[type] == 0 and (skill_set[type].nil? or skill_set[type][:skills].empty?)
  - next if !edit and (user and !user.whole) and [CxbRank::MUSIC_TYPE_DELETED, CxbRank::MUSIC_TYPE_REV_DELETED, CxbRank::MUSIC_TYPE_REV_LIMITED, CxbRank::MUSIC_TYPE_REV_COURSE_LIMITED].include?(type)
  - if [CxbRank::MUSIC_TYPE_REV_COURSE, CxbRank::MUSIC_TYPE_REV_COURSE_LIMITED].include?(type)
    = haml :course_skills, :locals => {:skills => skill_set[type][:skills], :edit => edit,
      :type_name => CxbRank::SiteSettings.music_types[type]}
  - else
    = haml :music_skills, :locals => {:user => user, :skills => skill_set[type][:skills],
      :edit => edit, :ignore_locked => ignore_locked, :type => type}
