$LOAD_PATH << '../../comrank/lib'

require 'yaml'
require 'csv'
require 'active_record'
require 'sinatra/activerecord'
require 'sinatra/activerecord/rake'
require 'cxbrank/const'
require 'cxbrank/master'

Time.zone = 'Tokyo'
ActiveRecord::Base.configurations = YAML.load_file(CxbRank::DATABASE_FILE)
ActiveRecord::Base.establish_connection(YAML.load_file(CxbRank::CONFIG_FILE)['environment'].to_sym)
ActiveRecord::Base.default_timezone = :local

namespace :cxbrank do
  desc 'initialize music master'
  task :init_master do
    CSV.open('db/master/musics.tsv', 'r', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::Music.restore_from_csv(csv)
    end

    CSV.open('db/master/legacy_charts.tsv', 'r', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::LegacyChart.restore_from_csv(csv)
    end

    CSV.open('db/master/courses.tsv', 'r', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::Course.restore_from_csv(csv)
    end

    CSV.open('db/master/course_musics.tsv', 'r', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::CourseMusic.restore_from_csv(csv)
    end

    CSV.open('db/master/events.tsv', 'r', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::Event.restore_from_csv(csv)
    end

    CSV.open('db/master/event_musics.tsv', 'r', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::EventMusic.restore_from_csv(csv)
    end
  end

  desc 'dump music master'
  task :dump_master do
    CSV.open('db/master/musics.tsv', 'w', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::Music.dump_to_csv(csv)
    end

    CSV.open('db/master/legacy_charts.tsv', 'w', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::LegacyChart.dump_to_csv(csv)
    end

    CSV.open('db/master/courses.tsv', 'w', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::Course.dump_to_csv(csv)
    end

    CSV.open('db/master/course_musics.tsv', 'w', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::CourseMusic.dump_to_csv(csv)
    end

    CSV.open('db/master/events.tsv', 'w', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::Event.dump_to_csv(csv)
    end

    CSV.open('db/master/event_musics.tsv', 'w', CxbRank::CSV_OPTIONS) do |csv|
      CxbRank::Master::EventMusic.dump_to_csv(csv)
    end
  end
end
